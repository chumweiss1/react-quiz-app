[{"C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\index.js":"1","C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\reportWebVitals.js":"2","C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\App.js":"3","C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\components\\Questions.js":"4","C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\components\\Results.js":"5","C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\components\\Loader.js":"6"},{"size":500,"mtime":1611227087443,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609846605679,"results":"9","hashOfConfig":"8"},{"size":7468,"mtime":1611225897112,"results":"10","hashOfConfig":"8"},{"size":3980,"mtime":1611238798896,"results":"11","hashOfConfig":"8"},{"size":1638,"mtime":1611237786667,"results":"12","hashOfConfig":"8"},{"size":743,"mtime":1611231735990,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"hemhxt",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\index.js",[],["29","30"],"C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\reportWebVitals.js",[],"C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\App.js",[],"C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\components\\Questions.js",["31","32","33","34"],"import React, { useState, useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme ) => ({\r\n  root: {\r\n    width: '50%',\r\n    backgroundColor: '#253053',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'start',\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n    position: 'absolute',\r\n    left: '25%',\r\n    top: '25%',\r\n    \r\n  },\r\n  btn: {\r\n    // margin: 'auto',\r\n    width: '200px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: \"center\",\r\n}\r\n}));\r\n\r\nexport default function Questions() {\r\n  \r\n  const classes = useStyles()\r\n  \r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [value, setValue] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n  const history = useHistory();\r\n  \r\n  const getQuesitons = () => {\r\n    fetch(process.env.PUBLIC_URL + 'questions.json')\r\n    .then((response) => {\r\n        return response.json();\r\n    }).then((jsonResponse) => {\r\n      setQuestions(jsonResponse);\r\n    });\r\n}\r\n\r\n    useEffect(() => {\r\n        getQuesitons();\r\n    },[]);\r\n  \r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  \r\n  const handleAnswerOptionClick = () => {    \r\n      const answer =  questions[currentQuestion].answerOptions[value.replace('index_', '')]\r\n       const isCorrect = answer.isCorrect\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\t\tif (currentQuestion + 1 < questions.length) {\r\n            setCurrentQuestion(currentQuestion + 1);\r\n            \r\n\t\t} else {\r\n            const scores = JSON.parse(localStorage.getItem('scores')) || []\r\n            scores.unshift(score)\r\n            localStorage.setItem('scores', JSON.stringify(scores.slice(0,10)))\r\n            history.push('/results')\r\n        }\r\n        setValue('')\r\n  };\r\n  \r\n  const handleScoreClick = () => {\r\n    setShowScore(true);\r\n  }\r\n\r\n\treturn (\r\n        <div>\r\n            { questions.length > 0 ? (\r\n                <Card className={classes.root}>\r\n\r\n                    <div >\r\n                            \r\n                    <CardContent>\r\n                    Question {currentQuestion + 1}/{questions.length}\r\n                        </CardContent>\r\n                        <FormControl component=\"fieldset\" >{questions[currentQuestion].questionText}\r\n                            <RadioGroup value={value} onChange={handleChange}>\r\n                            {questions[currentQuestion].answerOptions.map((answerOption, index) => (\r\n                            <FormControlLabel key={index} value={'index_'+index}\r\n                                control={<Radio />}\r\n                                label={answerOption.answerText}>\r\n                            </FormControlLabel>\r\n                            ) )}\r\n                            </RadioGroup>\r\n                            \r\n                <Button disabled={!value} className={classes.btn} variant=\"contained\" color=\"secondary\" onClick={() => handleAnswerOptionClick()}>Next</Button>\r\n                            \r\n                        </FormControl>\r\n                </div>\r\n                        \r\n                </Card>\r\n        ): <div></div>\r\n    }\r\n        </div>\r\n\t);\r\n}","C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\components\\Results.js",["35"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nexport default function Results() {\r\n    const useStyles = makeStyles((theme ) => ({\r\n        root: {\r\n            minHeight: '250px',\r\n        width: '50%',\r\n        backgroundColor: '#253053',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'start',\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        color: '#ffffff',\r\n        fontSize: 20,\r\n        position: 'absolute',\r\n        left: '25%',\r\n        top: '25%',\r\n        },\r\n        btn: {\r\n            margin: 'auto',\r\n        }\r\n      }));\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const scores = JSON.parse(localStorage.getItem('scores'))\r\n    \r\n    const handlePlayAgainClick = () => {\r\n        history.push('/questions')\r\n    }\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                {scores.map((score, index) => (\r\n                    <div>Game #{index + 1} - Score: {score}</div>\r\n                ))}\r\n                </CardContent>\r\n                <Button className={classes.btn} variant=\"contained\" color=\"secondary\" onClick={() => handlePlayAgainClick()}>Play Again</Button>\r\n                \r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\chumi\\Documents\\React_Trivia_App\\my-quiz\\src\\components\\Loader.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":6,"column":8,"nodeType":"42","messageId":"43","endLine":6,"endColumn":17},{"ruleId":"40","severity":1,"message":"44","line":9,"column":8,"nodeType":"42","messageId":"43","endLine":9,"endColumn":19},{"ruleId":"40","severity":1,"message":"45","line":48,"column":10,"nodeType":"42","messageId":"43","endLine":48,"endColumn":19},{"ruleId":"40","severity":1,"message":"46","line":89,"column":9,"nodeType":"42","messageId":"43","endLine":89,"endColumn":25},{"ruleId":"40","severity":1,"message":"44","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":19},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'FormLabel' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'showScore' is assigned a value but never used.","'handleScoreClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]